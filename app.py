import streamlit as st
import pandas as pd

## Fase 1: Configuraci√≥n inicial
st.set_page_config(page_title="An√°lisis de Luminarias", layout="wide")
st.title("üìä An√°lisis de Base Capital - Luminarias LED")

# Subir archivo
archivo = st.file_uploader("üìÅ Sube tu archivo Excel", type=["xlsx"])

if archivo is not None:
    try:
        # Leer Excel (primera hoja)
        df = pd.read_excel(archivo, engine="openpyxl")

        # Renombrar columnas si hay duplicadas
        df.columns = [f"{col}_{i}" if df.columns.tolist().count(col) > 1 else col 
                      for i, col in enumerate(df.columns)]

        # Mostrar tabla preliminar
        st.success(f"‚úÖ Archivo cargado correctamente. Total de filas: {df.shape[0]}")
        st.dataframe(df.head(20), use_container_width=True)

        # Validar columnas requeridas
        columnas_esperadas = [
            'Activo fijo', 'Subn√∫mero', 'Capitalizado el', 'Denominaci√≥n del activo fijo',
            'N√∫mero de serie', 'Denominaci√≥n del activo fijo', 'Cantidad',
            'Amortizaci√≥n normal', 'Val.adq.', 'Amo acum.', 'Val.cont.',
            'Moneda', 'Unidad de Retiro', 'Descripci√≥n SG', 'A√ëO DE ACTIVACI√ìN', '2025'
        ]
        columnas_faltantes = [col for col in columnas_esperadas if col not in df.columns]

        if columnas_faltantes:
            st.error(f"‚ùå Faltan las siguientes columnas: {columnas_faltantes}")
        else:
            st.success("‚úÖ Todas las columnas necesarias est√°n presentes.")

            ## Fase 2: Limpieza de tipos de datos
            df["A√ëO DE ACTIVACI√ìN"] = pd.to_numeric(df["A√ëO DE ACTIVACI√ìN"], errors='coerce')
            df["Val.adq."] = pd.to_numeric(df["Val.adq."], errors='coerce')
            df["Val.cont."] = pd.to_numeric(df["Val.cont."], errors='coerce')
            df["Amo acum."] = pd.to_numeric(df["Amo acum."], errors='coerce')

            ## Fase 3: Filtro por tipo de luminaria
            tipos_disponibles = df["Descripci√≥n SG"].dropna().unique().tolist()
            tipo_filtrado = st.selectbox("üéõÔ∏è Filtrar por tipo de luminaria", sorted(tipos_disponibles))
            df_filtrado = df[df["Descripci√≥n SG"] == tipo_filtrado]

            ## Fase 4: Resumen por a√±o
            st.subheader(f"üìÖ Resumen por A√±o de Activaci√≥n - {tipo_filtrado}")
            resumen = (
                df_filtrado.groupby("A√ëO DE ACTIVACI√ìN")[["Val.adq.", "Amo acum.", "Val.cont."]]
                .sum()
                .reset_index()
            )

            # Formato de miles
            resumen_formateado = resumen.copy()
            for col in ["Val.adq.", "Amo acum.", "Val.cont."]:
                resumen_formateado[col] = resumen_formateado[col].apply(lambda x: f"{x:,.2f}")

            st.dataframe(resumen_formateado, use_container_width=True)

    except Exception as e:
        st.error(f"‚ùå Ocurri√≥ un error al leer el archivo: {str(e)}")

else:
    st.info("üìÇ Sube un archivo Excel con tus luminarias para comenzar el an√°lisis.")
