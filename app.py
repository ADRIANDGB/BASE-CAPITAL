import streamlit as st
import pandas as pd




## Fase 1
st.set_page_config(page_title="An√°lisis de Luminarias", layout="wide")
st.title("üìä An√°lisis de Base Capital - Luminarias LED")

# 1. Subir archivo
archivo = st.file_uploader("üìÅ Sube tu archivo Excel", type=["xlsx"])

if archivo is not None:
    try:
        # 2. Leer Excel (solo la primera hoja)
        df = pd.read_excel(archivo, engine="openpyxl")
        
        # 3. Renombrar columnas si hay duplicados (evita errores como 2 columnas con el mismo nombre)
        df.columns = [f"{col}_{i}" if df.columns.tolist().count(col) > 1 else col 
                      for i, col in enumerate(df.columns)]

        # 4. Mostrar forma y tabla b√°sica
        st.success(f"Archivo cargado correctamente. Total de filas: {df.shape[0]}")
        st.dataframe(df.head(20), use_container_width=True)

        # 5. Validar columnas m√≠nimas esperadas (puedes ajustar los nombres seg√∫n tu archivo real)
        columnas_esperadas = [
            'Activo fijo', 'Subn√∫mero', 'Capitalizado el', 'Denominaci√≥n del activo fijo',
            'N√∫mero de serie', 'Denominaci√≥n del activo fijo', 'Cantidad', 'Amortizaci√≥n normal',
            'Val.adq.', 'Amo acum.', 'Val.cont.', 'Moneda', 'Unidad de Retiro',
            'Descripci√≥n SG', 'A√ëO DE ACTIVACI√ìN', '2025'
        ]

        columnas_faltantes = [col for col in columnas_esperadas if col not in df.columns]

        if columnas_faltantes:
            st.error(f"‚ùå Faltan las siguientes columnas: {columnas_faltantes}")
        else:
            st.success("‚úÖ Todas las columnas necesarias est√°n presentes.")

            # 6. Conversi√≥n de tipos (por si vienen mal desde Excel)
            df["A√ëO DE ACTIVACI√ìN"] = pd.to_numeric(df["A√ëO DE ACTIVACI√ìN"], errors='coerce')
            df["Val.adq."] = pd.to_numeric(df["Val.adq."], errors='coerce')
            df["Val.cont."] = pd.to_numeric(df["Val.cont."], errors='coerce')
            df["Amo acum."] = pd.to_numeric(df["Amo acum."], errors='coerce')

            # Mostrar estad√≠stica b√°sica por a√±o
            st.subheader("Resumen por A√±o de Activaci√≥n")
            resumen = df.groupby("A√ëO DE ACTIVACI√ìN")[["Val.adq.", "Amo acum.", "Val.cont."]].sum()
            st.dataframe(resumen, use_container_width=True)

    except Exception as e:
        st.error(f"‚ùå Ocurri√≥ un error al leer el archivo: {str(e)}")

else:
    st.info("üìé Sube un archivo Excel con tus luminarias para comenzar el an√°lisis.")
