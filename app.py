import streamlit as st
import pandas as pd

## Fase 1: Configuraci√≥n inicial
st.set_page_config(page_title="An√°lisis de Luminarias", layout="wide")
st.title("üìä An√°lisis de Base Capital - Luminarias LED")

# Subir archivo
archivo = st.file_uploader("üìÅ Sube tu archivo Excel", type=["xlsx"])

if archivo is not None:
    try:
        # Leer Excel
        df = pd.read_excel(archivo, engine="openpyxl")

        # Renombrar columnas duplicadas
        df.columns = [f"{col}_{i}" if df.columns.tolist().count(col) > 1 else col 
                      for i, col in enumerate(df.columns)]

        # Validar columnas
        columnas_esperadas = [
            'Activo fijo', 'Subn√∫mero', 'Capitalizado el', 'Denominaci√≥n del activo fijo',
            'N√∫mero de serie', 'Denominaci√≥n del activo fijo', 'Cantidad',
            'Amortizaci√≥n normal', 'Val.adq.', 'Amo acum.', 'Val.cont.',
            'Moneda', 'Unidad de Retiro', 'Descripci√≥n SG', 'A√ëO DE ACTIVACI√ìN'
        ]
        columnas_faltantes = [col for col in columnas_esperadas if col not in df.columns]

        if columnas_faltantes:
            st.error(f"‚ùå Faltan columnas: {columnas_faltantes}")
        else:
            # Convertir num√©ricos
            for col in ["A√ëO DE ACTIVACI√ìN", "Val.adq.", "Val.cont.", "Amo acum."]:
                df[col] = pd.to_numeric(df[col], errors='coerce')

            ## Fase 2: Generar resumen por tipo
            tipos = {
                "LED ALTA INTENSIDAD": df["Descripci√≥n SG"] == "LED ALTA INTENSIDAD",
                "LED BAJA INTENSIDAD": df["Descripci√≥n SG"] == "LUMINARIA BAJA INTENSIDAD",
                "Sin categor√≠a (vac√≠o)": df["Descripci√≥n SG"].isna()
            }

            for nombre, filtro in tipos.items():
                st.subheader(f"üî¶ Resumen por A√±o - {nombre}")
                df_filtrado = df[filtro]

           # LIMPIEZA PREVIA DE A√ëO DE ACTIVACI√ìN
df["A√ëO DE ACTIVACI√ìN"] = df["A√ëO DE ACTIVACI√ìN"].astype(str).str.strip()
df["A√ëO DE ACTIVACI√ìN"] = pd.to_numeric(df["A√ëO DE ACTIVACI√ìN"], errors="coerce")

# ELIMINAMOS FILAS SIN A√ëO DE ACTIVACI√ìN
df = df[df["A√ëO DE ACTIVACI√ìN"].notna()]
df["A√ëO DE ACTIVACI√ìN"] = df["A√ëO DE ACTIVACI√ìN"].astype(int)

# AGRUPACI√ìN NORMAL
resumen = (
    df_filtrado.groupby("A√ëO DE ACTIVACI√ìN", dropna=False)
    .agg({
        "Activo fijo": "count",
        "Val.adq.": "sum",
        "Amo acum.": "sum",
        "Val.cont.": "sum"
    })
    .reset_index()
    .sort_values(by="A√ëO DE ACTIVACI√ìN")
)


                resumen = resumen.rename(columns={"Activo fijo": "Cantidad de Activos"})

                # Formato bonito
                for col in ["Val.adq.", "Amo acum.", "Val.cont."]:
                    resumen[col] = resumen[col].apply(lambda x: f"{x:,.2f}")

                st.dataframe(resumen, use_container_width=True)

    except Exception as e:
        st.error(f"‚ùå Error al procesar el archivo: {str(e)}")

else:
    st.info("üìÇ Sube un archivo Excel con tus luminarias para comenzar.")
